overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/analytics"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: retrieveAnalytics
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.analytics.retrieve();

              console.log(result);
            }

            run();
  - target: $["paths"]["/commissions"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: listCommissions
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.commissions.list();

              console.log(result);
            }

            run();
  - target: $["paths"]["/commissions/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateCommission
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.commissions.update({
                id: "cm_1JVR7XRCSR0EDBAF39FZ4PMYE",
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/customers"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getCustomers
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.customers.list();

              console.log(result);
            }

            run();
  - target: $["paths"]["/customers/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deleteCustomer
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.customers.delete("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/customers/{id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getCustomer
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.customers.get({
                id: "<id>",
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/customers/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateCustomer
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.customers.update({
                id: "<id>",
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/domains"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: listDomains
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.domains.list();

              for await (const page of result) {
                console.log(page);
              }
            }

            run();
  - target: $["paths"]["/domains"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createDomain
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.domains.create();

              console.log(result);
            }

            run();
  - target: $["paths"]["/domains/register"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: registerDomain
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.domains.register();

              console.log(result);
            }

            run();
  - target: $["paths"]["/domains/status"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: checkDomainStatus
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.domains.checkStatus({
                domains: "<value>",
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/domains/{slug}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deleteDomain
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.domains.delete("acme.com");

              console.log(result);
            }

            run();
  - target: $["paths"]["/domains/{slug}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateDomain
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.domains.update("acme.com");

              console.log(result);
            }

            run();
  - target: $["paths"]["/events"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: listEvents
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.events.list();

              console.log(result);
            }

            run();
  - target: $["paths"]["/folders"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: listFolders
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.folders.list();

              console.log(result);
            }

            run();
  - target: $["paths"]["/folders"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createFolder
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.folders.create();

              console.log(result);
            }

            run();
  - target: $["paths"]["/folders/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deleteFolder
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.folders.delete("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/folders/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateFolder
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.folders.update("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/links"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getLinks
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.list();

              for await (const page of result) {
                console.log(page);
              }
            }

            run();
  - target: $["paths"]["/links"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createLink
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.create();

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/bulk"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: bulkDeleteLinks
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.deleteMany({
                linkIds: [
                  "clux0rgak00011...",
                  "clux0rgak00022...",
                ],
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/bulk"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: bulkUpdateLinks
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.updateMany();

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/bulk"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: bulkCreateLinks
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.createMany();

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/count"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getLinksCount
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.count();

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/info"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getLinkInfo
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.get();

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/upsert"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: upsertLink
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.upsert();

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/{linkId}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deleteLink
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.delete("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/links/{linkId}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateLink
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.links.update("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/partners"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createPartner
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.partners.create();

              console.log(result);
            }

            run();
  - target: $["paths"]["/partners/analytics"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: retrievePartnerAnalytics
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.partners.analytics();

              console.log(result);
            }

            run();
  - target: $["paths"]["/partners/links"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: retrieveLinks
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.partners.retrieveLinks();

              console.log(result);
            }

            run();
  - target: $["paths"]["/partners/links"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createPartnerLink
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.partners.createLink();

              console.log(result);
            }

            run();
  - target: $["paths"]["/partners/links/upsert"]["put"]
    update:
      x-codeSamples:
        - lang: typescript
          label: upsertPartnerLink
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.partners.upsertLink();

              console.log(result);
            }

            run();
  - target: $["paths"]["/qr"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getQRCode
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.qrCodes.get({
                url: "https://needy-newsstand.biz/",
                hideLogo: true,
                includeMargin: false,
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/tags"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getTags
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.tags.list();

              console.log(result);
            }

            run();
  - target: $["paths"]["/tags"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createTag
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.tags.create();

              console.log(result);
            }

            run();
  - target: $["paths"]["/tags/{id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: deleteTag
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.tags.delete("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/tags/{id}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateTag
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.tags.update("<id>");

              console.log(result);
            }

            run();
  - target: $["paths"]["/tokens/embed/referrals"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: createReferralsEmbedToken
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.embedTokens.referrals();

              console.log(result);
            }

            run();
  - target: $["paths"]["/track/lead"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: trackLead
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.track.lead();

              console.log(result);
            }

            run();
  - target: $["paths"]["/track/sale"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: trackSale
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.track.sale();

              console.log(result);
            }

            run();
  - target: $["paths"]["/workspaces/{idOrSlug}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: getWorkspace
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.workspaces.get({
                idOrSlug: "<value>",
              });

              console.log(result);
            }

            run();
  - target: $["paths"]["/workspaces/{idOrSlug}"]["patch"]
    update:
      x-codeSamples:
        - lang: typescript
          label: updateWorkspace
          source: |-
            import { Dub } from "dub";

            const dub = new Dub({
              token: "DUB_API_KEY",
            });

            async function run() {
              const result = await dub.workspaces.update("<value>");

              console.log(result);
            }

            run();

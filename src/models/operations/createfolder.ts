/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The access level of the folder within the workspace.
 */
export const AccessLevel = {
  Write: "write",
  Read: "read",
} as const;
/**
 * The access level of the folder within the workspace.
 */
export type AccessLevel = ClosedEnum<typeof AccessLevel>;

export type CreateFolderRequestBody = {
  /**
   * The name of the folder.
   */
  name: string;
  /**
   * The access level of the folder within the workspace.
   */
  accessLevel?: AccessLevel | null | undefined;
};

/** @internal */
export const AccessLevel$inboundSchema: z.ZodNativeEnum<typeof AccessLevel> = z
  .nativeEnum(AccessLevel);

/** @internal */
export const AccessLevel$outboundSchema: z.ZodNativeEnum<typeof AccessLevel> =
  AccessLevel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccessLevel$ {
  /** @deprecated use `AccessLevel$inboundSchema` instead. */
  export const inboundSchema = AccessLevel$inboundSchema;
  /** @deprecated use `AccessLevel$outboundSchema` instead. */
  export const outboundSchema = AccessLevel$outboundSchema;
}

/** @internal */
export const CreateFolderRequestBody$inboundSchema: z.ZodType<
  CreateFolderRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  accessLevel: z.nullable(AccessLevel$inboundSchema).default(null),
});

/** @internal */
export type CreateFolderRequestBody$Outbound = {
  name: string;
  accessLevel: string | null;
};

/** @internal */
export const CreateFolderRequestBody$outboundSchema: z.ZodType<
  CreateFolderRequestBody$Outbound,
  z.ZodTypeDef,
  CreateFolderRequestBody
> = z.object({
  name: z.string(),
  accessLevel: z.nullable(AccessLevel$outboundSchema).default(null),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateFolderRequestBody$ {
  /** @deprecated use `CreateFolderRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateFolderRequestBody$inboundSchema;
  /** @deprecated use `CreateFolderRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateFolderRequestBody$outboundSchema;
  /** @deprecated use `CreateFolderRequestBody$Outbound` instead. */
  export type Outbound = CreateFolderRequestBody$Outbound;
}

export function createFolderRequestBodyToJSON(
  createFolderRequestBody: CreateFolderRequestBody,
): string {
  return JSON.stringify(
    CreateFolderRequestBody$outboundSchema.parse(createFolderRequestBody),
  );
}

export function createFolderRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateFolderRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateFolderRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateFolderRequestBody' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PartnerAnalyticsTopLinks = {
  /**
   * The unique ID of the short link
   *
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  link: string;
  /**
   * The unique ID of the short link
   */
  id: string;
  /**
   * The domain of the short link
   */
  domain: string;
  /**
   * The key of the short link
   */
  key: string;
  /**
   * The short link URL
   */
  shortLink: string;
  /**
   * The destination URL of the short link
   */
  url: string;
  /**
   * The comments of the short link
   */
  comments?: string | null | undefined;
  /**
   * The creation timestamp of the short link
   */
  createdAt: string;
  /**
   * The number of clicks from this link
   */
  clicks?: number | undefined;
  /**
   * The number of leads from this link
   */
  leads?: number | undefined;
  /**
   * The number of sales from this link
   */
  sales?: number | undefined;
  /**
   * The total amount of sales from this link, in cents
   */
  saleAmount?: number | undefined;
  earnings?: number | undefined;
};

/** @internal */
export const PartnerAnalyticsTopLinks$inboundSchema: z.ZodType<
  PartnerAnalyticsTopLinks,
  z.ZodTypeDef,
  unknown
> = z.object({
  link: z.string(),
  id: z.string(),
  domain: z.string(),
  key: z.string(),
  shortLink: z.string(),
  url: z.string(),
  comments: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  clicks: z.number().default(0),
  leads: z.number().default(0),
  sales: z.number().default(0),
  saleAmount: z.number().default(0),
  earnings: z.number().default(0),
});

/** @internal */
export type PartnerAnalyticsTopLinks$Outbound = {
  link: string;
  id: string;
  domain: string;
  key: string;
  shortLink: string;
  url: string;
  comments?: string | null | undefined;
  createdAt: string;
  clicks: number;
  leads: number;
  sales: number;
  saleAmount: number;
  earnings: number;
};

/** @internal */
export const PartnerAnalyticsTopLinks$outboundSchema: z.ZodType<
  PartnerAnalyticsTopLinks$Outbound,
  z.ZodTypeDef,
  PartnerAnalyticsTopLinks
> = z.object({
  link: z.string(),
  id: z.string(),
  domain: z.string(),
  key: z.string(),
  shortLink: z.string(),
  url: z.string(),
  comments: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  clicks: z.number().default(0),
  leads: z.number().default(0),
  sales: z.number().default(0),
  saleAmount: z.number().default(0),
  earnings: z.number().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PartnerAnalyticsTopLinks$ {
  /** @deprecated use `PartnerAnalyticsTopLinks$inboundSchema` instead. */
  export const inboundSchema = PartnerAnalyticsTopLinks$inboundSchema;
  /** @deprecated use `PartnerAnalyticsTopLinks$outboundSchema` instead. */
  export const outboundSchema = PartnerAnalyticsTopLinks$outboundSchema;
  /** @deprecated use `PartnerAnalyticsTopLinks$Outbound` instead. */
  export type Outbound = PartnerAnalyticsTopLinks$Outbound;
}

export function partnerAnalyticsTopLinksToJSON(
  partnerAnalyticsTopLinks: PartnerAnalyticsTopLinks,
): string {
  return JSON.stringify(
    PartnerAnalyticsTopLinks$outboundSchema.parse(partnerAnalyticsTopLinks),
  );
}

export function partnerAnalyticsTopLinksFromJSON(
  jsonString: string,
): SafeParseResult<PartnerAnalyticsTopLinks, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PartnerAnalyticsTopLinks$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PartnerAnalyticsTopLinks' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The type of trigger method: link click or QR scan
 */
export const Trigger = {
  Qr: "qr",
  Link: "link",
} as const;
/**
 * The type of trigger method: link click or QR scan
 */
export type Trigger = ClosedEnum<typeof Trigger>;

export type AnalyticsTriggers = {
  /**
   * The type of trigger method: link click or QR scan
   */
  trigger: Trigger;
  /**
   * The number of clicks from this trigger method
   */
  clicks?: number | undefined;
  /**
   * The number of leads from this trigger method
   */
  leads?: number | undefined;
  /**
   * The number of sales from this trigger method
   */
  sales?: number | undefined;
  /**
   * The total amount of sales from this trigger method, in cents
   */
  saleAmount?: number | undefined;
};

/** @internal */
export const Trigger$inboundSchema: z.ZodNativeEnum<typeof Trigger> = z
  .nativeEnum(Trigger);

/** @internal */
export const Trigger$outboundSchema: z.ZodNativeEnum<typeof Trigger> =
  Trigger$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Trigger$ {
  /** @deprecated use `Trigger$inboundSchema` instead. */
  export const inboundSchema = Trigger$inboundSchema;
  /** @deprecated use `Trigger$outboundSchema` instead. */
  export const outboundSchema = Trigger$outboundSchema;
}

/** @internal */
export const AnalyticsTriggers$inboundSchema: z.ZodType<
  AnalyticsTriggers,
  z.ZodTypeDef,
  unknown
> = z.object({
  trigger: Trigger$inboundSchema,
  clicks: z.number().default(0),
  leads: z.number().default(0),
  sales: z.number().default(0),
  saleAmount: z.number().default(0),
});

/** @internal */
export type AnalyticsTriggers$Outbound = {
  trigger: string;
  clicks: number;
  leads: number;
  sales: number;
  saleAmount: number;
};

/** @internal */
export const AnalyticsTriggers$outboundSchema: z.ZodType<
  AnalyticsTriggers$Outbound,
  z.ZodTypeDef,
  AnalyticsTriggers
> = z.object({
  trigger: Trigger$outboundSchema,
  clicks: z.number().default(0),
  leads: z.number().default(0),
  sales: z.number().default(0),
  saleAmount: z.number().default(0),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AnalyticsTriggers$ {
  /** @deprecated use `AnalyticsTriggers$inboundSchema` instead. */
  export const inboundSchema = AnalyticsTriggers$inboundSchema;
  /** @deprecated use `AnalyticsTriggers$outboundSchema` instead. */
  export const outboundSchema = AnalyticsTriggers$outboundSchema;
  /** @deprecated use `AnalyticsTriggers$Outbound` instead. */
  export type Outbound = AnalyticsTriggers$Outbound;
}

export function analyticsTriggersToJSON(
  analyticsTriggers: AnalyticsTriggers,
): string {
  return JSON.stringify(
    AnalyticsTriggers$outboundSchema.parse(analyticsTriggers),
  );
}

export function analyticsTriggersFromJSON(
  jsonString: string,
): SafeParseResult<AnalyticsTriggers, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AnalyticsTriggers$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AnalyticsTriggers' from JSON`,
  );
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type ClickEvents = {
    timestamp: string;
    clickId: string;
    linkId: string;
    domain: string;
    key: string;
    url: string;
    continent: string | null;
    country: string | null;
    city: string | null;
    device: string | null;
    browser: string | null;
    os: string | null;
    referer: string | null;
    ip: string | null;
    qr: number | null;
};

/** @internal */
export const ClickEvents$inboundSchema: z.ZodType<ClickEvents, z.ZodTypeDef, unknown> = z
    .object({
        timestamp: z.string(),
        click_id: z.string(),
        link_id: z.string(),
        domain: z.string(),
        key: z.string(),
        url: z.string(),
        continent: z.nullable(z.string()),
        country: z.nullable(z.string()),
        city: z.nullable(z.string()),
        device: z.nullable(z.string()),
        browser: z.nullable(z.string()),
        os: z.nullable(z.string()),
        referer: z.nullable(z.string()),
        ip: z.nullable(z.string()),
        qr: z.nullable(z.number()),
    })
    .transform((v) => {
        return remap$(v, {
            click_id: "clickId",
            link_id: "linkId",
        });
    });

/** @internal */
export type ClickEvents$Outbound = {
    timestamp: string;
    click_id: string;
    link_id: string;
    domain: string;
    key: string;
    url: string;
    continent: string | null;
    country: string | null;
    city: string | null;
    device: string | null;
    browser: string | null;
    os: string | null;
    referer: string | null;
    ip: string | null;
    qr: number | null;
};

/** @internal */
export const ClickEvents$outboundSchema: z.ZodType<
    ClickEvents$Outbound,
    z.ZodTypeDef,
    ClickEvents
> = z
    .object({
        timestamp: z.string(),
        clickId: z.string(),
        linkId: z.string(),
        domain: z.string(),
        key: z.string(),
        url: z.string(),
        continent: z.nullable(z.string()),
        country: z.nullable(z.string()),
        city: z.nullable(z.string()),
        device: z.nullable(z.string()),
        browser: z.nullable(z.string()),
        os: z.nullable(z.string()),
        referer: z.nullable(z.string()),
        ip: z.nullable(z.string()),
        qr: z.nullable(z.number()),
    })
    .transform((v) => {
        return remap$(v, {
            clickId: "click_id",
            linkId: "link_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClickEvents$ {
    /** @deprecated use `ClickEvents$inboundSchema` instead. */
    export const inboundSchema = ClickEvents$inboundSchema;
    /** @deprecated use `ClickEvents$outboundSchema` instead. */
    export const outboundSchema = ClickEvents$outboundSchema;
    /** @deprecated use `ClickEvents$Outbound` instead. */
    export type Outbound = ClickEvents$Outbound;
}

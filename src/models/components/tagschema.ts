/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The color of the tag.
 */
export const Color = {
  Red: "red",
  Yellow: "yellow",
  Green: "green",
  Blue: "blue",
  Purple: "purple",
  Pink: "pink",
  Brown: "brown",
} as const;
/**
 * The color of the tag.
 */
export type Color = ClosedEnum<typeof Color>;

export type TagSchema = {
  /**
   * The unique ID of the tag.
   */
  id: string;
  /**
   * The name of the tag.
   */
  name: string;
  /**
   * The color of the tag.
   */
  color: Color;
};

/** @internal */
export const Color$inboundSchema: z.ZodNativeEnum<typeof Color> = z.nativeEnum(
  Color,
);

/** @internal */
export const Color$outboundSchema: z.ZodNativeEnum<typeof Color> =
  Color$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Color$ {
  /** @deprecated use `Color$inboundSchema` instead. */
  export const inboundSchema = Color$inboundSchema;
  /** @deprecated use `Color$outboundSchema` instead. */
  export const outboundSchema = Color$outboundSchema;
}

/** @internal */
export const TagSchema$inboundSchema: z.ZodType<
  TagSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  color: Color$inboundSchema,
});

/** @internal */
export type TagSchema$Outbound = {
  id: string;
  name: string;
  color: string;
};

/** @internal */
export const TagSchema$outboundSchema: z.ZodType<
  TagSchema$Outbound,
  z.ZodTypeDef,
  TagSchema
> = z.object({
  id: z.string(),
  name: z.string(),
  color: Color$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TagSchema$ {
  /** @deprecated use `TagSchema$inboundSchema` instead. */
  export const inboundSchema = TagSchema$inboundSchema;
  /** @deprecated use `TagSchema$outboundSchema` instead. */
  export const outboundSchema = TagSchema$outboundSchema;
  /** @deprecated use `TagSchema$Outbound` instead. */
  export type Outbound = TagSchema$Outbound;
}

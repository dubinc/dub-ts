/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { commissionsList } from "../funcs/commissionsList.js";
import { commissionsUpdate } from "../funcs/commissionsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Commissions extends ClientSDK {
  /**
   * Get commissions for a program.
   *
   * @remarks
   * Retrieve a list of commissions for a program.
   */
  async list(
    request?: operations.ListCommissionsRequest | undefined,
    options?: RequestOptions,
  ): Promise<Array<operations.ListCommissionsResponseBody>> {
    return unwrapAsync(commissionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a commission.
   *
   * @remarks
   * Update an existing commission amount. This is useful for handling refunds (partial or full) or fraudulent sales.
   */
  async update(
    request: operations.UpdateCommissionRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdateCommissionResponseBody> {
    return unwrapAsync(commissionsUpdate(
      this,
      request,
      options,
    ));
  }
}

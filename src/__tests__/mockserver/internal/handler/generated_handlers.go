// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package handler

import (
	"context"
	"mockserver/internal/logging"
	"mockserver/internal/tracking"
	"net/http"
)

// GeneratedHandlers returns all generated handlers.
func GeneratedHandlers(ctx context.Context, dir *logging.HTTPFileDirectory, rt *tracking.RequestTracker) []*GeneratedHandler {
	return []*GeneratedHandler{
		NewGeneratedHandler(ctx, http.MethodDelete, "/customers/{id}", pathDeleteCustomersID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/domains/{slug}", pathDeleteDomainsSlug(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/folders/{id}", pathDeleteFoldersID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/links/bulk", pathDeleteLinksBulk(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/links/{linkId}", pathDeleteLinksLinkID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodDelete, "/tags/{id}", pathDeleteTagsID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/analytics", pathGetAnalytics(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/customers", pathGetCustomers(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/customers/{id}", pathGetCustomersID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/domains", pathGetDomains(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/events", pathGetEvents(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/folders", pathGetFolders(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/links", pathGetLinks(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/links/count", pathGetLinksCount(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/links/info", pathGetLinksInfo(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/partners/analytics", pathGetPartnersAnalytics(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/partners/links", pathGetPartnersLinks(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/qr", pathGetQr(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/tags", pathGetTags(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodGet, "/workspaces/{idOrSlug}", pathGetWorkspacesIDOrSlug(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/customers/{id}", pathPatchCustomersID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/domains/{slug}", pathPatchDomainsSlug(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/folders/{id}", pathPatchFoldersID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/links/bulk", pathPatchLinksBulk(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/links/{linkId}", pathPatchLinksLinkID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/partners/sales", pathPatchPartnersSales(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/tags/{id}", pathPatchTagsID(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPatch, "/workspaces/{idOrSlug}", pathPatchWorkspacesIDOrSlug(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/customers", pathPostCustomers(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/domains", pathPostDomains(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/folders", pathPostFolders(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/links", pathPostLinks(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/links/bulk", pathPostLinksBulk(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/partners", pathPostPartners(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/partners/links", pathPostPartnersLinks(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/tags", pathPostTags(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/tokens/embed/referrals", pathPostTokensEmbedReferrals(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/track/lead", pathPostTrackLead(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPost, "/track/sale", pathPostTrackSale(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/links/upsert", pathPutLinksUpsert(dir, rt)),
		NewGeneratedHandler(ctx, http.MethodPut, "/partners/links/upsert", pathPutPartnersLinksUpsert(dir, rt)),
	}
}

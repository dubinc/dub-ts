// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type RetrieveLinksRequest struct {
	ProgramID string  `queryParam:"style=form,explode=true,name=programId"`
	PartnerID *string `queryParam:"style=form,explode=true,name=partnerId"`
	TenantID  *string `queryParam:"style=form,explode=true,name=tenantId"`
}

func (o *RetrieveLinksRequest) GetProgramID() string {
	if o == nil {
		return ""
	}
	return o.ProgramID
}

func (o *RetrieveLinksRequest) GetPartnerID() *string {
	if o == nil {
		return nil
	}
	return o.PartnerID
}

func (o *RetrieveLinksRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

type Link struct {
	// The unique ID of the short link.
	ID string `json:"id"`
	// The domain of the short link. If not provided, the primary domain for the workspace will be used (or `dub.sh` if the workspace has no domains).
	Domain string `json:"domain"`
	// The short link slug. If not provided, a random 7-character slug will be generated.
	Key string `json:"key"`
	// The full URL of the short link, including the https protocol (e.g. `https://dub.sh/try`).
	ShortLink string `json:"shortLink"`
	// The destination URL of the short link.
	URL string `json:"url"`
	// The number of clicks on the short link.
	Clicks *float64 `default:"0" json:"clicks"`
	// The number of leads the short links has generated.
	Leads *float64 `default:"0" json:"leads"`
	// The number of sales the short links has generated.
	Sales *float64 `default:"0" json:"sales"`
	// The total dollar amount of sales the short links has generated (in cents).
	SaleAmount *float64 `default:"0" json:"saleAmount"`
}

func (l Link) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *Link) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Link) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Link) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *Link) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *Link) GetShortLink() string {
	if o == nil {
		return ""
	}
	return o.ShortLink
}

func (o *Link) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

func (o *Link) GetClicks() *float64 {
	if o == nil {
		return nil
	}
	return o.Clicks
}

func (o *Link) GetLeads() *float64 {
	if o == nil {
		return nil
	}
	return o.Leads
}

func (o *Link) GetSales() *float64 {
	if o == nil {
		return nil
	}
	return o.Sales
}

func (o *Link) GetSaleAmount() *float64 {
	if o == nil {
		return nil
	}
	return o.SaleAmount
}

type RetrieveLinksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The retrieved partner links.
	Links []Link
}

func (o *RetrieveLinksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RetrieveLinksResponse) GetLinks() []Link {
	if o == nil {
		return nil
	}
	return o.Links
}

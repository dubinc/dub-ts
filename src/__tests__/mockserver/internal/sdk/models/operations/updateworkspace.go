// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpdateWorkspaceRequestBody struct {
	Name              *string  `json:"name,omitempty"`
	Slug              *string  `json:"slug,omitempty"`
	Logo              *string  `json:"logo,omitempty"`
	ConversionEnabled *bool    `json:"conversionEnabled,omitempty"`
	AllowedHostnames  []string `json:"allowedHostnames,omitempty"`
}

func (o *UpdateWorkspaceRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateWorkspaceRequestBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateWorkspaceRequestBody) GetLogo() *string {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *UpdateWorkspaceRequestBody) GetConversionEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.ConversionEnabled
}

func (o *UpdateWorkspaceRequestBody) GetAllowedHostnames() []string {
	if o == nil {
		return nil
	}
	return o.AllowedHostnames
}

type UpdateWorkspaceRequest struct {
	// The ID or slug of the workspace to update.
	IDOrSlug    string                      `pathParam:"style=simple,explode=false,name=idOrSlug"`
	RequestBody *UpdateWorkspaceRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateWorkspaceRequest) GetIDOrSlug() string {
	if o == nil {
		return ""
	}
	return o.IDOrSlug
}

func (o *UpdateWorkspaceRequest) GetRequestBody() *UpdateWorkspaceRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateWorkspaceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The updated workspace.
	WorkspaceSchema *components.WorkspaceSchema
}

func (o *UpdateWorkspaceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateWorkspaceResponse) GetWorkspaceSchema() *components.WorkspaceSchema {
	if o == nil {
		return nil
	}
	return o.WorkspaceSchema
}

// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

// AccessLevel - The access level of the folder within the workspace.
type AccessLevel string

const (
	AccessLevelWrite AccessLevel = "write"
	AccessLevelRead  AccessLevel = "read"
)

func (e AccessLevel) ToPointer() *AccessLevel {
	return &e
}
func (e *AccessLevel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "write":
		fallthrough
	case "read":
		*e = AccessLevel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccessLevel: %v", v)
	}
}

type CreateFolderRequestBody struct {
	// The name of the folder.
	Name string `json:"name"`
	// The access level of the folder within the workspace.
	AccessLevel *AccessLevel `default:"null" json:"accessLevel"`
}

func (c CreateFolderRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateFolderRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateFolderRequestBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateFolderRequestBody) GetAccessLevel() *AccessLevel {
	if o == nil {
		return nil
	}
	return o.AccessLevel
}

type CreateFolderResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The created folder
	FolderSchema *components.FolderSchema
}

func (o *CreateFolderResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateFolderResponse) GetFolderSchema() *components.FolderSchema {
	if o == nil {
		return nil
	}
	return o.FolderSchema
}

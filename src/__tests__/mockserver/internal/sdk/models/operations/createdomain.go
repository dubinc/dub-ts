// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

type CreateDomainRequestBody struct {
	// Name of the domain.
	Slug string `json:"slug"`
	// Redirect users to a specific URL when any link under this domain has expired.
	ExpiredURL *string `json:"expiredUrl,omitempty"`
	// Redirect users to a specific URL when a link under this domain doesn't exist.
	NotFoundURL *string `json:"notFoundUrl,omitempty"`
	// Whether to archive this domain. `false` will unarchive a previously archived domain.
	Archived *bool `default:"false" json:"archived"`
	// Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.
	Placeholder *string `json:"placeholder,omitempty"`
	// The logo of the domain.
	Logo *string `json:"logo,omitempty"`
	// assetLinks.json configuration file (for deep link support on Android).
	AssetLinks *string `json:"assetLinks,omitempty"`
	// apple-app-site-association configuration file (for deep link support on iOS).
	AppleAppSiteAssociation *string `json:"appleAppSiteAssociation,omitempty"`
}

func (c CreateDomainRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateDomainRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateDomainRequestBody) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *CreateDomainRequestBody) GetExpiredURL() *string {
	if o == nil {
		return nil
	}
	return o.ExpiredURL
}

func (o *CreateDomainRequestBody) GetNotFoundURL() *string {
	if o == nil {
		return nil
	}
	return o.NotFoundURL
}

func (o *CreateDomainRequestBody) GetArchived() *bool {
	if o == nil {
		return nil
	}
	return o.Archived
}

func (o *CreateDomainRequestBody) GetPlaceholder() *string {
	if o == nil {
		return nil
	}
	return o.Placeholder
}

func (o *CreateDomainRequestBody) GetLogo() *string {
	if o == nil {
		return nil
	}
	return o.Logo
}

func (o *CreateDomainRequestBody) GetAssetLinks() *string {
	if o == nil {
		return nil
	}
	return o.AssetLinks
}

func (o *CreateDomainRequestBody) GetAppleAppSiteAssociation() *string {
	if o == nil {
		return nil
	}
	return o.AppleAppSiteAssociation
}

type CreateDomainResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The domain was created.
	DomainSchema *components.DomainSchema
}

func (o *CreateDomainResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateDomainResponse) GetDomainSchema() *components.DomainSchema {
	if o == nil {
		return nil
	}
	return o.DomainSchema
}

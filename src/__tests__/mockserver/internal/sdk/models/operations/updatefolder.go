// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/models/components"
	"mockserver/internal/sdk/utils"
)

// UpdateFolderAccessLevel - The access level of the folder within the workspace.
type UpdateFolderAccessLevel string

const (
	UpdateFolderAccessLevelWrite UpdateFolderAccessLevel = "write"
	UpdateFolderAccessLevelRead  UpdateFolderAccessLevel = "read"
)

func (e UpdateFolderAccessLevel) ToPointer() *UpdateFolderAccessLevel {
	return &e
}
func (e *UpdateFolderAccessLevel) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "write":
		fallthrough
	case "read":
		*e = UpdateFolderAccessLevel(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFolderAccessLevel: %v", v)
	}
}

type UpdateFolderRequestBody struct {
	// The name of the folder.
	Name *string `json:"name,omitempty"`
	// The access level of the folder within the workspace.
	AccessLevel *UpdateFolderAccessLevel `default:"null" json:"accessLevel"`
}

func (u UpdateFolderRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateFolderRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateFolderRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateFolderRequestBody) GetAccessLevel() *UpdateFolderAccessLevel {
	if o == nil {
		return nil
	}
	return o.AccessLevel
}

type UpdateFolderRequest struct {
	// The ID of the folder to update.
	ID          string                   `pathParam:"style=simple,explode=false,name=id"`
	RequestBody *UpdateFolderRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateFolderRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateFolderRequest) GetRequestBody() *UpdateFolderRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateFolderResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The updated folder.
	FolderSchema *components.FolderSchema
}

func (o *UpdateFolderResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateFolderResponse) GetFolderSchema() *components.FolderSchema {
	if o == nil {
		return nil
	}
	return o.FolderSchema
}

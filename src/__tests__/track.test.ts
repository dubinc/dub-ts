/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Dub } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Track Track Lead", async () => {
  const testHttpClient = createTestHTTPClient("trackLead");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.track.lead();
  expect(result).toBeDefined();
  expect(result).toEqual({
    click: {
      id: "<id>",
    },
    customer: {
      name: "<value>",
      email: "Diego86@hotmail.com",
      avatar: "https://picsum.photos/seed/fWwyl/1479/748",
      externalId: "<id>",
    },
  });
});

test("Track Track Sale", async () => {
  const testHttpClient = createTestHTTPClient("trackSale");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.track.sale();
  expect(result).toBeDefined();
  expect(result).toEqual({
    eventName: "<value>",
    customer: {
      id: "<id>",
      name: "<value>",
      email: "Tavares.Rice@hotmail.com",
      avatar: "https://picsum.photos/seed/6lTJH/15/2912",
      externalId: "<id>",
    },
    sale: {
      amount: 5612.49,
      currency: "Bulgarian Lev",
      paymentProcessor: "<value>",
      invoiceId: "<id>",
      metadata: {
        "key": "<value>",
        "key1": "<value>",
      },
    },
  });
});

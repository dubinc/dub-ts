/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Dub } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Tags Create Tag", async () => {
  const testHttpClient = createTestHTTPClient("createTag");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.tags.create();
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    name: "<value>",
    color: "blue",
  });
});

test("Tags Get Tags", async () => {
  const testHttpClient = createTestHTTPClient("getTags");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.tags.list();
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      id: "<id>",
      name: "<value>",
      color: "blue",
    },
    {
      id: "<id>",
      name: "<value>",
      color: "purple",
    },
    {
      id: "<id>",
      name: "<value>",
      color: "yellow",
    },
  ]);
});

test("Tags Update Tag", async () => {
  const testHttpClient = createTestHTTPClient("updateTag");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.tags.update("<id>");
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    name: "<value>",
    color: "brown",
  });
});

test("Tags Delete Tag", async () => {
  const testHttpClient = createTestHTTPClient("deleteTag");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.tags.delete("<id>");
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
  });
});

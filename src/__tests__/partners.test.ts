/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Dub } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Partners Create Partner", async () => {
  const testHttpClient = createTestHTTPClient("createPartner");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.partners.create();
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    name: "<value>",
    email: "Loyal79@yahoo.com",
    image: "https://loremflickr.com/1/679?lock=7139282333236917",
    country: "Slovenia",
    paypalEmail: "<value>",
    stripeConnectId: "<id>",
    payoutsEnabledAt: "<value>",
    createdAt: "1732153215847",
    status: "declined",
    programId: "<id>",
    tenantId: "<id>",
    links: [
      {
        id: "<id>",
        domain: "harmful-disposer.com",
        key: "<key>",
        shortLink: "https://each-barracks.biz/",
        url: "https://blind-breastplate.name/",
        clicks: 0,
        leads: 0,
        sales: 0,
        saleAmount: 0,
      },
      {
        id: "<id>",
        domain: "gripping-analogy.name",
        key: "<key>",
        shortLink: "https://distant-advertisement.name",
        url: "https://quick-witted-march.org/",
        clicks: 0,
        leads: 0,
        sales: 0,
        saleAmount: 0,
      },
      {
        id: "<id>",
        domain: "kooky-kinase.biz",
        key: "<key>",
        shortLink: "https://considerate-pressure.org",
        url: "https://smooth-dash.info",
        clicks: 0,
        leads: 0,
        sales: 0,
        saleAmount: 0,
      },
    ],
    clicks: 0,
    leads: 0,
    sales: 0,
    saleAmount: 0,
    earnings: 0,
  });
});

test("Partners Create Partner Link", async () => {
  const testHttpClient = createTestHTTPClient("createPartnerLink");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.partners.createLink();
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    domain: "tall-making.com",
    key: "<key>",
    url: "https://inferior-louse.org",
    trackConversion: false,
    externalId: "<id>",
    tenantId: "<id>",
    programId: "<id>",
    partnerId: "<id>",
    archived: false,
    expiresAt: "1767064420295",
    expiredUrl: "https://tragic-skean.biz/",
    password: "kPhoCRFmmigZdFo",
    proxy: false,
    title: "<value>",
    description: "miserably merrily stay ouch",
    image: "https://picsum.photos/seed/tXRBthjAFj/215/2959",
    video: "https://loremflickr.com/3827/1329?lock=4742285326014076",
    rewrite: false,
    doIndex: false,
    ios: "<value>",
    android: "<id>",
    geo: {},
    publicStats: false,
    tagId: "<id>",
    tags: [
      {
        id: "<id>",
        name: "<value>",
        color: "purple",
      },
      {
        id: "<id>",
        name: "<value>",
        color: "pink",
      },
      {
        id: "<id>",
        name: "<value>",
        color: "red",
      },
    ],
    folderId: "<id>",
    webhookIds: [
      "<value>",
      "<value>",
    ],
    comments:
      "numb worriedly tinted nor utterly but meh worriedly gadzooks poorly afterwards whether penalise before academics nicely ugh whistle hungrily",
    shortLink: "https://likely-submitter.info/",
    qrCode: "https://plain-cafe.org",
    utmSource: "<value>",
    utmMedium: "<value>",
    utmCampaign: "<value>",
    utmTerm: "<value>",
    utmContent: "<value>",
    userId: "<id>",
    workspaceId: "<id>",
    clicks: 0,
    lastClicked: "<value>",
    leads: 0,
    sales: 0,
    saleAmount: 0,
    createdAt: "1728120688101",
    updatedAt: "1745166802900",
    projectId: "<id>",
  });
});

test("Partners Retrieve Links", async () => {
  const testHttpClient = createTestHTTPClient("retrieveLinks");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.partners.retrieveLinks({
    programId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      id: "<id>",
      domain: "deafening-jury.net",
      key: "<key>",
      shortLink: "https://negligible-presume.net/",
      url: "https://smart-fax.org",
      clicks: 0,
      leads: 0,
      sales: 0,
      saleAmount: 0,
    },
    {
      id: "<id>",
      domain: "cavernous-sediment.com",
      key: "<key>",
      shortLink: "https://outgoing-ad.com",
      url: "https://everlasting-provision.biz/",
      clicks: 0,
      leads: 0,
      sales: 0,
      saleAmount: 0,
    },
  ]);
});

test("Partners Upsert Partner Link", async () => {
  const testHttpClient = createTestHTTPClient("upsertPartnerLink");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.partners.upsertLink();
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    domain: "internal-teriyaki.name",
    key: "<key>",
    url: "https://snoopy-exasperation.name/",
    trackConversion: false,
    externalId: "<id>",
    tenantId: "<id>",
    programId: "<id>",
    partnerId: "<id>",
    archived: false,
    expiresAt: "1749718681016",
    expiredUrl: "https://trim-stump.org/",
    password: "aeFj89Olng6LL82",
    proxy: false,
    title: "<value>",
    description:
      "next assail unblinking gulp doting selfishly resource poppy scent",
    image: "https://loremflickr.com/1169/3796?lock=7016484909038829",
    video: "https://loremflickr.com/476/1877?lock=724230151067151",
    rewrite: false,
    doIndex: false,
    ios: "<value>",
    android: "<id>",
    geo: {},
    publicStats: false,
    tagId: "<id>",
    tags: [],
    folderId: "<id>",
    webhookIds: [
      "<value>",
    ],
    comments: "ick yippee unit train fashion up out er confound redevelop",
    shortLink: "https://tense-interchange.com/",
    qrCode: "https://uncommon-accelerator.net/",
    utmSource: "<value>",
    utmMedium: "<value>",
    utmCampaign: "<value>",
    utmTerm: "<value>",
    utmContent: "<value>",
    userId: "<id>",
    workspaceId: "<id>",
    clicks: 0,
    lastClicked: "<value>",
    leads: 0,
    sales: 0,
    saleAmount: 0,
    createdAt: "1742078907705",
    updatedAt: "1745166837538",
    projectId: "<id>",
  });
});

test("Partners Retrieve Partner Analytics", async () => {
  const testHttpClient = createTestHTTPClient("retrievePartnerAnalytics");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.partners.analytics({
    programId: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      link: "<value>",
      id: "<id>",
      domain: "hot-dandelion.org",
      key: "<key>",
      shortLink: "<value>",
      url: "https://everlasting-cheetah.name",
      createdAt: "1718731996662",
      clicks: 0,
      leads: 0,
      sales: 0,
      saleAmount: 0,
      earnings: 0,
    },
    {
      link: "<value>",
      id: "<id>",
      domain: "grizzled-ecliptic.biz",
      key: "<key>",
      shortLink: "<value>",
      url: "https://possible-interchange.info",
      createdAt: "1744656764922",
      clicks: 0,
      leads: 0,
      sales: 0,
      saleAmount: 0,
      earnings: 0,
    },
    {
      link: "<value>",
      id: "<id>",
      domain: "glass-wriggler.biz",
      key: "<key>",
      shortLink: "<value>",
      url: "https://light-fit.name/",
      createdAt: "1716287275442",
      clicks: 0,
      leads: 0,
      sales: 0,
      saleAmount: 0,
      earnings: 0,
    },
  ]);
});

test("Partners Update Partner Sale", async () => {
  const testHttpClient = createTestHTTPClient("updatePartnerSale");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.partners.updateSale();
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    amount: 1560.34,
    earnings: 2256.73,
    currency: "Cayman Islands Dollar",
    status: "pending",
    createdAt: "1733602681459",
    updatedAt: "1745121352386",
  });
});

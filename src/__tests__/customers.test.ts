/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { expect, test } from "vitest";
import { Dub } from "../index.js";
import { createTestHTTPClient } from "./testclient.js";

test("Customers Get Customers", async () => {
  const testHttpClient = createTestHTTPClient("getCustomers");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.customers.list();
  expect(result).toBeDefined();
  expect(result).toEqual([
    {
      id: "<id>",
      externalId: "<id>",
      name: "<value>",
      createdAt: "1730924937228",
    },
    {
      id: "<id>",
      externalId: "<id>",
      name: "<value>",
      createdAt: "1735057556211",
    },
    {
      id: "<id>",
      externalId: "<id>",
      name: "<value>",
      createdAt: "1719270323308",
    },
  ]);
});

test("Customers Create Customer", async () => {
  const testHttpClient = createTestHTTPClient("createCustomer");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.customers.create();
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    externalId: "<id>",
    name: "<value>",
    createdAt: "1729011256454",
  });
});

test("Customers Get Customer", async () => {
  const testHttpClient = createTestHTTPClient("getCustomer");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.customers.get({
    id: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    externalId: "<id>",
    name: "<value>",
    createdAt: "1735752297882",
  });
});

test("Customers Update Customer", async () => {
  const testHttpClient = createTestHTTPClient("updateCustomer");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.customers.update({
    id: "<id>",
  });
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
    externalId: "<id>",
    name: "<value>",
    createdAt: "1740707572292",
  });
});

test("Customers Delete Customer", async () => {
  const testHttpClient = createTestHTTPClient("deleteCustomer");

  const dub = new Dub({
    serverURL: process.env["TEST_SERVER_URL"] ?? "http://localhost:18080",
    httpClient: testHttpClient,
    token: "DUB_API_KEY",
  });

  const result = await dub.customers.delete("<id>");
  expect(result).toBeDefined();
  expect(result).toEqual({
    id: "<id>",
  });
});

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { foldersDelete } from "../../funcs/foldersDelete.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  id: z.string(),
};

export const tool$foldersDelete: ToolDefinition<typeof args> = {
  name: "folders-delete",
  description: `Delete a folder

Delete a folder from the workspace. All existing links will still work, but they will no longer be associated with this folder.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await foldersDelete(
      client,
      args.id,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
